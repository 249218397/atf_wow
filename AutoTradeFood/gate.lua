---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by hydra.
--- DateTime: 2020-01-05 13:43
---
local addonName, L = ...

local gate_request_timeout = L.gate_request_timeout
local min_mana = L.min_mana
local interact_key = L.hotkeys.interact_key

L.gate = {}
L.gate.gating_context = {["spell"]="", ["requester"]="", ["cooldown_ts"]=0, ["city"]="", ["invited"]=false}
L.gate.gating_contexts = {}


function L.F.say_gate_help(to_player)
  SendChatMessage("4步便捷开门！请花1分钟仔细阅读，简单高效无需求人开门即可达成！", "WHISPER", "Common", to_player)
  SendChatMessage("1. 在材料NPC处购买传【送门符文】1枚，也可以AH购买，我原价放了许多。", "WHISPER", "Common", to_player)
--  SendChatMessage("**！！！请注意！！！，原价是20银！！！认准我的名字【米豪】或【米豪的维修师】**", "WHISPER", "Common", to_player)
  SendChatMessage("2. 【先】M我主城的名字，“暴风城”、“铁炉堡”或“达纳苏斯”", "WHISPER", "Common", to_player)
  SendChatMessage("3. 【然后】将石头主动交易给我：【传送门符文】【1枚】", "WHISPER", "Common", to_player)
  SendChatMessage("4. 【交易成功后】，我将【自动】向您发起组队邀请，并在短时间内施放传送门法术，请确保您已退组哈", "WHISPER", "Common", to_player)
  SendChatMessage("请您使用传送门后自行离队，祝您旅途愉快！", "WHISPER", "Common", to_player)
end


local function parse_and_set_city(msg)
  local spell, city
  if msg:find("暴风城") then
    spell = "传送门：暴风城"
    city = "暴风城"
  elseif msg:find("苏斯") and msg:find("希利") == nil then  -- 广东话友好，
    spell = "传送门：达纳苏斯"
    city = "达纳苏斯"
  elseif msg:find("铁炉堡") then
    spell = "传送门：铁炉堡"
    city = "铁炉堡"
  else
    print("这里不应该到达")
    return nil, nil
  end
  return spell, city
end


local function invalidate_requests(winner, city)
  for player, _ in pairs(L.gate.gating_contexts) do
    SendChatMessage(winner..
            "抢先一步交易了我【传送门符文】，您的请求已取消。我将为其施放通往"..city.."的传送门，如若顺路，请M我【水水水】进组",
            "WHISPER", "Common", player
    )
  end
  L.gate.gating_contexts = {}
end


local function transit_to_gate_state(player)
  L.gate.gating_contexts[player] = nil
  invalidate_requests(player, L.gate.gating_context["city"])
  L.state = 3
  L.gate.gating_context["cooldown_ts"] = GetTime() + 60
  L.gate.gating_context["invited"] = false
  L.F.invite_player(player)
end


function L.F.gate_cooldown()
  if GetTime() < L.gate.gating_context["cooldown_ts"] then
    return math.modf( L.gate.gating_context["cooldown_ts"] - GetTime())
  else
    return 0
  end
end


function L.F.gate_request(player, msg)
  if not (L.F.watch_dog_ok()) then
    SendChatMessage(
        "米豪的驱动程序出现故障，开门服务暂时失效，请等待米豪的维修师进行修复。十分抱歉！",
        "WHISPER", "Common", player)
    return
  end

  local cooldown_last = L.F.gate_cooldown()
  if cooldown_last > 0 then
    SendChatMessage("传送门法术正在冷却，请"..cooldown_last.."秒后重新请求", "WHISPER", "Common", player)
    return
  end
  local spell, city = parse_and_set_city(msg)
  if not spell then
    return
  end
  if GateWhiteList[player] then
    if GetItemCount(L.items.stone_name) > 0 then
      L.gate.gating_context["spell"] = spell
      L.gate.gating_context["city"] = city
      L.gate.gating_context["requester"] = player
      transit_to_gate_state(player)
      SendChatMessage("贵宾驾到，马上起航！", "WHISPER", "Common", player)
      return
    else
      SendChatMessage("贵宾您好，我已无油，请交易我施法材料【传送门符文】【1枚】来为我补充油料", "WHISPER", "Common", player)
    end
  end

  L.gate.gating_contexts[player] = {
    ["request_ts"]=GetTime(),
    ["city"]=city,
    ["spell"]=spell,
  }
  SendChatMessage(
    city.."传送门指定成功，请于"..gate_request_timeout..
        "秒内交易我【1】枚【传送门符文】。请于施法材料商或AH原价从我手中购买该材料。请注意，原价为20Y，如果没有这个价格的，请寻找材料NPC！",
    "WHISPER", "Common", player
  )
end


function L.F.drive_gate()
  for player, gc in pairs(L.gate.gating_contexts) do
    if GetTime() - gc["request_ts"] > gate_request_timeout then
      SendChatMessage("传送门未能成功开启，未收到符文石", "WHISPER", "Common", player)
      L.gate.gating_contexts[player] = nil
    end
  end
  if GetTime() < L.gate.gating_context["cooldown_ts"] and L.gate.gating_context['invited'] == false then
    if UnitInParty(L.gate.gating_context["requester"]) then
      L.gate.gating_context["invited"] = true
    else
      SendChatMessage(
              "上次邀请未成功！请您确认离队，我会在传送门消失前重复尝试邀请您！",
              "WHISPER", "Common", L.gate.gating_context["requester"]
      )
      L.F.invite_player(L.gate.gating_context["requester"])
    end
  end
end


function L.F.bind_gate()
  if UnitPower("player") < min_mana then
    SetBindingItem(interact_key, "魔法晶水")
  else
    SetBindingSpell(interact_key, L.gate.gating_context["spell"])
  end
end


local function should_trade_stone(trade)
  if L.gate.gating_contexts[trade.npc_name] then
    return true, false
  end
  return false, false
end


local function maybe_feed_some(trade)
  if  L.F.get_free_slots() < 6 then
    L.F.feed(L.items.food_name, 1)
  end
end


local function statistics_gate(trade)
  local key_trade_all = "trade.gate.count."..date("%x")
  L.F.merge_statistics_plus_int(key_trade_all, 1)
end



local function on_trade_complete(trade)
  local npc_name = trade.npc_name
  local city = L.gate.gating_contexts[npc_name]["city"]
  local spell = L.gate.gating_contexts[npc_name]["spell"]
  SendChatMessage(
          "符文石交易成功，请接受组队邀请。稍等几秒将为您开门...若未邀请成功，请M我水水水进组", "WHISPER", "Common", npc_name)
  L.gate.gating_context["spell"] = spell
  L.gate.gating_context["city"] = city
  L.gate.gating_context["requester"] = npc_name
  transit_to_gate_state(npc_name)
  L.F.append_trade_say_messages(npc_name.."，"..city.."传送程序已载入，请坐稳扶好！想搭便车的朋友，M我【水水水】进组")
  statistics_gate()
end


local function should_accept_trade(trade)
  local items = trade.items.target.items
  local cnt = trade.items.target.count
  local npc_name = trade.npc_name

  if cnt == 0 then
    L.F.append_trade_say_messages(npc_name.."，需要交易我1枚【传送门符文】才能够施法哦！")
    return false
  end
  if L.gate.gating_contexts[npc_name] == nil then
    -- already canceled.
    L.F.append_trade_say_messages(npc_name.."，由于"..gate_request_timeout.."秒已过，交易已取消，请重新M我主城名字。")
    return false
  end
  if items[L.items.stone_name] == 1 and cnt == 1 then
    return true
  end
  if items["Gold"] and items["Gold"] > 0 then
    L.F.append_trade_say_messages(npc_name.."，开门服务只收【传送门符文】，不收金币，详情烦请M我【传送门】，仅需1分钟，轻松开门！")
  elseif items[L.items.stone_name] and items[L.items.stone_name] > 1 then
    L.F.append_trade_say_messages(npc_name.."，请交易我【1枚】传送门符文，多余的请您保留以备后用，谢谢！")
  elseif items[L.items.stone_name_incorrect] then
    L.F.append_trade_say_messages(npc_name.."，您交易的材料有误，材料名字是【传送“门”符文】而非【传送符文】，请您重新购买哦。")
  else
    L.F.append_trade_say_messages(npc_name.."，请勿交易我额外的物品，谢谢！")
  end
  return false
end


L.trade_hooks.trade_stone = {
  ["should_hook"] = should_trade_stone,
  ["feed_items"] = maybe_feed_some,
  ["on_trade_complete"] = on_trade_complete,
  ["on_trade_cancel"] = nil,
  ["on_trade_error"] = nil,
  ["should_accept"] = should_accept_trade,
  ["check_target_item"] = nil,
}
