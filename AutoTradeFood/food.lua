---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by hydra.
--- DateTime: 2020-01-05 13:44
---

local addonName, L = ...

local check_buff = L.F.check_buff
local interact_key = L.hotkeys.interact_key

local mw_button = L.F.create_macro_button("MWButton", "")

local tclass_food = {
  ["战士"]={0, 6},
  ["法师"]={2, 0},
  ["猎人"]={4, 2},
  ["圣骑士"]={4, 2},
  ["潜行者"]={0, 6},
  ["牧师"]={4, 2},
  ["德鲁伊"]={3, 3},
  ["术士"]={3, 3}
}

local tclass_level = {
  ["战士"]=45,
  ["法师"]=55,
  ["猎人"]=55,
  ["圣骑士"]=55,
  ["潜行者"]=45,
  ["牧师"]=55,
  ["德鲁伊"]=55,
  ["术士"]=55
}


local trade_count_words = {
  [2]="听说胃口好的人身体都好！",
  [3]="继续努力……我的背包很大很大！",
  [4]="您真的确定不会浪费这些。。魔法嘛？",
  [5]="感觉身体被掏空，给跪给跪。。。",
  [6]="呃……你会收到……我的律师函的",
  [7]="监狱的生活给我上了一堂很重要的课，如果算上要把肥皂捏紧的话那就是两堂，是的！生存第一！",
}

L.food = {}
L.food.tclass_food = tclass_food
L.food.tclass_level = tclass_level
local water_name = L.items.water_name
local food_name = L.items.food_name

local last_trade_player = ""
local last_fail_player_is_trade_player = true
local last_trade_player_count = 0
local last_trade_success_ts = 0


local function set_last_trade_player(pname)
  last_fail_player_is_trade_player = true
  last_trade_success_ts = GetTime()
  if last_trade_player == pname then
    last_trade_player_count = last_trade_player_count + 1
  else
    last_trade_player_count = 0
    last_trade_player = pname
  end
  return last_trade_player_count
end


local function use_trinket()
  local trinket = {13, 14}
  for _, t in ipairs(trinket) do
    local itemLink = GetInventoryItemLink("player", t)
    if itemLink and itemLink:find(L.items.trinket_to_use) then
      local cd = GetInventoryItemCooldown("player", t)
      if cd == 0 and UnitPower("player") >= L.min_mana_to_use_trinket then
        return "/use "..L.items.trinket_to_use.."\n"
      end
    end
  end
  return ""
end


function L.F.bind_make_food_or_water()
  if L.F.target_level_to_acquire() then
    L.F.bind_acquire_target_level()
  elseif check_buff("喝水", 0) then
    SetBinding(interact_key, "JUMP")
  elseif L.F.should_cook_low_level_food() then
    L.F.bind_low_level_cook()
  else
    SetBindingClick(interact_key, "MWButton")
    if L.F.get_free_slots() == 0 then
      mw_button:SetAttribute("macrotext", "/cast 魔爆术")
    else
      local w = L.F.get_water_count(1)
      local b = L.F.get_bread_count(1)
      local may_use_trinket = use_trinket()
      if w * 0.8 > b then
        mw_button:SetAttribute("macrotext", may_use_trinket.."/cast 造食术")
      else
        mw_button:SetAttribute("macrotext", may_use_trinket.."/cast 造水术")
      end

    end
  end
end


local function check_stock(npc_name)
  if L.F.get_water_count() >= 4 and L.F.get_bread_count() >= 4 then
    return true
  else
    if npc_name == last_trade_player then
      last_fail_player_is_trade_player = true
    else
      last_fail_player_is_trade_player = false
    end
    return false
  end
end


local function check_level(tlevel, tclass, npc_name)
  if L.debug.enabled and L.debug.white_list[npc_name] then
    return true
  end
  return L.F.can_feed_target(tlevel, tclass, npc_name)
end


local function should_give_food(trade)
  local tclass = trade.npc_class
  local tlevel = trade.npc_level
  local npc_name = trade.npc_name

  if L.F.get_busy_state() then
    if tclass == "法师" and tlevel == 60 then
      SendChatMessage("用餐高峰，请60级法爷自行解决食水问题。如希望为我补充货源，请M我【我要补货】，谢谢！", "WHISPER", "Common", npc_name)
      return true, true
    elseif npc_name == last_trade_player and not(last_fail_player_is_trade_player) and GetTime() - last_trade_success_ts < 120 then
      SendChatMessage("当前为用餐高峰时间，请勿连续取用食物，给其他朋友些机会哦，谢谢支持！", "WHISPER", "Common", npc_name)
      return true, true
    end
  end
  if not check_stock() then
    local water = L.F.get_water_count()
    local bread = L.F.get_bread_count()
    SendChatMessage(
            "库存不足，请稍等一小会儿...当前存货：【大水】"..water.."组，【面包】"..bread.."组", "WHISPER",
            "Common", npc_name
    )
    return true, true
  elseif check_level(tlevel, tclass, npc_name) then
    return true, false
  end
  return false, false
end


local function feed_foods(trade)
  local w, f = L.F.get_feed_count(trade.npc_class, trade.npc_name)
  local scale = 1
  if L.F.get_busy_state() then
    scale = 0.5
  end
  w = math.ceil(w * scale)
  f = math.ceil(f * scale)
  L.F.feed(water_name, w, 20)
  L.F.feed(food_name, f, 20)
end


local function trade_completed(trade)
  local class = trade.npc_class
  local level = trade.npc_level
  local name = trade.npc_name

  set_last_trade_player(name)

  if L.F.search_str_contains(class, {"牧师", "圣骑士", "德鲁伊"}) then
    L.F.append_trade_say_messages(
            name.."，".."智慧祝福、王者祝福、爪子、激活、精神可以提高我的制作效率，如果您方便，就强化我一下，谢谢！"
    )
  elseif class == "法师" and level == 60 then
    L.F.append_trade_say_messages("法爷需自强，不当伸手党，嘿嘿嘿...")
  end
  local words = trade_count_words[last_trade_player_count]
  if words then
    L.F.append_trade_say_messages(name.."，"..words)
  end
end


L.trade_hooks.trade_food = {
  ["should_hook"] = should_give_food,
  ["feed_items"] = feed_foods,
  ["on_trade_complete"] = trade_completed,
  ["on_trade_cancel"] = nil,
  ["on_trade_error"] = nil,
  ["should_accept"] = L.F.check_food_trade_target_items,
  ["check_target_item"] = nil,
}
